---
export interface Props {
	title?: string;
}

const { title = "C++ Learning Hub" } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css">
		<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
	</head>
	<body>
		<!-- Top Navigation -->
		<nav class="top-nav">
			<div class="nav-container">
				<div class="nav-brand">
					<h1>C++ Learning Hub</h1>
				</div>
				<div class="nav-links">
					<a href="/" class="nav-link">Home</a>
					<a href="/basics" class="nav-link">Basics</a>
					<a href="/algorithms" class="nav-link">Algorithms</a>
					<a href="/data-structures" class="nav-link">Data Structures</a>
					<a href="/practice" class="nav-link">Practice</a>
				</div>
			</div>
		</nav>

		<div class="app-container">
			<!-- Left Sidebar Navigation -->
			<aside class="left-sidebar">
				<div class="sidebar-section">
					<h3>C++ Basics</h3>
					<ul>
						<li><a href="/basics/introduction">Introduction</a></li>
						<li><a href="/basics/variables">Variables & Types</a></li>
						<li><a href="/basics/control-structures">Control Structures</a></li>
						<li><a href="/basics/functions">Functions</a></li>
						<li><a href="/basics/classes">Classes & Objects</a></li>
						<li><a href="/basics/pointers">Pointers & References</a></li>
						<li><a href="/basics/memory">Memory Management</a></li>
					</ul>
				</div>
				
				<div class="sidebar-section">
					<h3>Data Structures</h3>
					<ul>
						<li><a href="/data-structures/arrays">Arrays</a></li>
						<li><a href="/data-structures/vectors">Vectors</a></li>
						<li><a href="/data-structures/linked-lists">Linked Lists</a></li>
						<li><a href="/data-structures/stacks">Stacks</a></li>
						<li><a href="/data-structures/queues">Queues</a></li>
						<li><a href="/data-structures/trees">Trees</a></li>
						<li><a href="/data-structures/graphs">Graphs</a></li>
						<li><a href="/data-structures/hash-tables">Hash Tables</a></li>
					</ul>
				</div>
				
				<div class="sidebar-section">
					<h3>Algorithms</h3>
					<ul>
						<li><a href="/algorithms/sorting">Sorting</a></li>
						<li><a href="/algorithms/searching">Searching</a></li>
						<li><a href="/algorithms/recursion">Recursion</a></li>
						<li><a href="/algorithms/dynamic-programming">Dynamic Programming</a></li>
						<li><a href="/algorithms/greedy">Greedy Algorithms</a></li>
						<li><a href="/algorithms/graph-algorithms">Graph Algorithms</a></li>
						<li><a href="/algorithms/string-algorithms">String Algorithms</a></li>
					</ul>
				</div>
			</aside>

			<!-- Main Content -->
			<main class="main-content">
				<slot />
			</main>

			<!-- Right Sidebar Table of Contents -->
			<aside class="right-sidebar">
				<div class="toc-container">
					<h3>Table of Contents</h3>
					<div id="table-of-contents" class="toc-list">
						<!-- TOC will be generated by JavaScript -->
					</div>
				</div>
			</aside>
		</div>

		<script>
			// Table of Contents Generator
			document.addEventListener('DOMContentLoaded', function() {
				const tocContainer = document.getElementById('table-of-contents');
				const headings = document.querySelectorAll('.main-content h1, .main-content h2, .main-content h3');
				
				if (!tocContainer || headings.length === 0) return;
				
				// Generate unique IDs for headings if they don't exist
				headings.forEach((heading, index) => {
					const headingElement = heading as HTMLElement;
					if (!headingElement.id) {
						const text = (headingElement.textContent || '').toLowerCase()
							.replace(/[^\w\s-]/g, '') // Remove special characters
							.replace(/\s+/g, '-')     // Replace spaces with hyphens
							.trim();
						headingElement.id = text || `heading-${index}`;
					}
				});
				
				// Build TOC HTML
				let tocHTML = '';
				headings.forEach(heading => {
					const level = parseInt(heading.tagName[1]); // Extract number from H1, H2, H3
					const text = heading.textContent || '';
					const id = heading.id;
					
					tocHTML += `
						<div class="toc-item level-${level}">
							<a href="#${id}" class="toc-link" data-target="${id}">${text}</a>
						</div>
					`;
				});
				
				tocContainer.innerHTML = tocHTML;
				
				// Smooth scrolling for TOC links
				const tocLinks = tocContainer.querySelectorAll('.toc-link');
				tocLinks.forEach(link => {
					link.addEventListener('click', function(e) {
						e.preventDefault();
						const linkElement = e.currentTarget as HTMLAnchorElement;
						if (!linkElement) return;
						
						const targetId = linkElement.getAttribute('data-target');
						const targetElement = targetId ? document.getElementById(targetId) : null;
						
						if (targetElement) {
							const headerOffset = 100; // Account for sticky header
							const elementPosition = targetElement.getBoundingClientRect().top;
							const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
							
							window.scrollTo({
								top: offsetPosition,
								behavior: 'smooth'
							});
						}
					});
				});
				
				// Highlight current section on scroll
				function updateActiveSection() {
					const scrollPos = window.scrollY + 150; // Offset for header
					let activeHeading = null;
					
					headings.forEach(heading => {
						const rect = heading.getBoundingClientRect();
						const headingTop = rect.top + window.pageYOffset;
						
						if (headingTop <= scrollPos) {
							activeHeading = heading;
						}
					});
					
					// Remove all active classes
					tocLinks.forEach(link => link.classList.remove('active'));
					
					// Add active class to current section
					if (activeHeading && tocContainer) {
						const headingElement = activeHeading as HTMLElement;
						if (headingElement.id) {
							const activeLink = tocContainer.querySelector(`[data-target="${headingElement.id}"]`);
							if (activeLink) {
								activeLink.classList.add('active');
							}
						}
					}
				}
				
				// Update active section on scroll
				let ticking = false;
				window.addEventListener('scroll', function() {
					if (!ticking) {
						requestAnimationFrame(function() {
							updateActiveSection();
							ticking = false;
						});
						ticking = true;
					}
				});
				
				// Initial call to set active section
				updateActiveSection();
			});
		</script>
	</body>
</html>

<style is:global>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
	}

	html, body {
		font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
		background-color: #f8fafc;
		color: #334155;
		line-height: 1.6;
	}

	/* Top Navigation */
	.top-nav {
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		color: white;
		padding: 0;
		position: sticky;
		top: 0;
		z-index: 100;
		box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
	}

	.nav-container {
		max-width: 100%;
		margin: 0 auto;
		display: flex;
		justify-content: space-between;
		align-items: center;
		padding: 1rem 2rem;
	}

	.nav-brand h1 {
		font-size: 1.5rem;
		font-weight: 700;
		color: white;
	}

	.nav-links {
		display: flex;
		gap: 2rem;
	}

	.nav-link {
		color: white;
		text-decoration: none;
		font-weight: 500;
		transition: color 0.2s ease;
	}

	.nav-link:hover {
		color: #e2e8f0;
	}

	/* App Container */
	.app-container {
		display: flex;
		min-height: calc(100vh - 80px);
	}

	/* Left Sidebar */
	.left-sidebar {
		width: 280px;
		background: white;
		border-right: 1px solid #e2e8f0;
		padding: 2rem;
		overflow-y: auto;
		position: sticky;
		top: 80px;
		height: calc(100vh - 80px);
	}

	/* Right Sidebar */
	.right-sidebar {
		width: 240px;
		background: white;
		border-left: 1px solid #e2e8f0;
		padding: 1.5rem;
		overflow-y: auto;
		position: sticky;
		top: 80px;
		height: calc(100vh - 80px);
	}

	.sidebar-section {
		margin-bottom: 2rem;
	}

	.sidebar-section h3 {
		font-size: 1.1rem;
		font-weight: 600;
		color: #1e293b;
		margin-bottom: 1rem;
		padding-bottom: 0.5rem;
		border-bottom: 2px solid #e2e8f0;
	}

	.sidebar-section ul {
		list-style: none;
	}

	.sidebar-section li {
		margin-bottom: 0.5rem;
	}

	.sidebar-section a {
		color: #64748b;
		text-decoration: none;
		font-size: 0.9rem;
		transition: color 0.2s ease;
		display: block;
		padding: 0.25rem 0;
	}

	.sidebar-section a:hover {
		color: #667eea;
	}

	/* Table of Contents */
	.toc-container h3 {
		font-size: 1rem;
		font-weight: 600;
		color: #1e293b;
		margin-bottom: 1rem;
		padding-bottom: 0.5rem;
		border-bottom: 2px solid #e2e8f0;
	}

	.toc-list {
		list-style: none;
		padding: 0;
	}

	.toc-item {
		margin-bottom: 0.5rem;
	}

	.toc-link {
		color: #64748b;
		text-decoration: none;
		font-size: 0.85rem;
		line-height: 1.4;
		transition: all 0.2s ease;
		display: block;
		padding: 0.25rem 0;
		border-left: 2px solid transparent;
		padding-left: 0.5rem;
	}

	.toc-link:hover {
		color: #667eea;
		border-left-color: #667eea;
	}

	.toc-link.active {
		color: #667eea;
		font-weight: 500;
		border-left-color: #667eea;
		background: #f8fafc;
		padding-left: 0.75rem;
	}

	.toc-item.level-2 {
		margin-left: 0.75rem;
	}

	.toc-item.level-3 {
		margin-left: 1.5rem;
	}

	.toc-item.level-2 .toc-link,
	.toc-item.level-3 .toc-link {
		font-size: 0.8rem;
		color: #94a3b8;
	}

	/* Main Content */
	.main-content {
		flex: 1;
		padding: 2rem;
		background: white;
		margin: 1rem;
		border-radius: 8px;
		box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
	}

	/* Typography */
	h1 {
		font-size: 2.5rem;
		font-weight: 700;
		color: #1e293b;
		margin-bottom: 1rem;
	}

	h2 {
		font-size: 2rem;
		font-weight: 600;
		color: #1e293b;
		margin: 2rem 0 1rem 0;
	}

	h3 {
		font-size: 1.5rem;
		font-weight: 600;
		color: #1e293b;
		margin: 1.5rem 0 0.75rem 0;
	}

	p {
		margin-bottom: 1rem;
		color: #475569;
	}

	/* Code styling */
	pre {
		background: #1e293b;
		border-radius: 8px;
		padding: 1.5rem;
		margin: 1rem 0;
		overflow-x: auto;
	}

	code {
		font-family: 'Fira Code', 'Monaco', 'Cascadia Code', monospace;
		font-size: 0.9rem;
	}

	inline code {
		background: #f1f5f9;
		padding: 0.2rem 0.4rem;
		border-radius: 4px;
		font-size: 0.85rem;
	}

	  /* Code Example Component Styles */
  .code-example {
    margin: 2rem 0;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
    background: white;
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
  }
  
  .code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem;
    background: #f8fafc;
    border-bottom: 1px solid #e2e8f0;
  }
  
  .code-header h4 {
    margin: 0;
    color: #1e293b;
    font-size: 1.1rem;
  }
  
  .code-actions {
    display: flex;
    gap: 0.5rem;
  }
  
  .toggle-output,
  .copy-code {
    padding: 0.5rem 1rem;
    border: 1px solid #d1d5db;
    background: white;
    color: #374151;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.875rem;
    transition: all 0.2s ease;
  }
  
  .toggle-output:hover,
  .copy-code:hover {
    background: #f3f4f6;
    border-color: #9ca3af;
  }
  
  .code-block {
    margin: 0;
    padding: 1.5rem;
    background: #1e293b;
    color: #e2e8f0;
    overflow-x: auto;
  }
  
  .code-block code {
    font-family: 'Fira Code', 'Monaco', 'Cascadia Code', monospace;
    font-size: 0.9rem;
    line-height: 1.5;
  }
  
  .code-explanation {
    padding: 1rem;
    background: #f8fafc;
    border-top: 1px solid #e2e8f0;
  }
  
  .code-explanation p {
    margin: 0;
    color: #64748b;
  }
  
  .code-output {
    padding: 1rem;
    background: #f0f9ff;
    border-top: 1px solid #e2e8f0;
  }
  
  .code-output h5 {
    margin: 0 0 0.5rem 0;
    color: #0f172a;
    font-size: 0.9rem;
  }
  
  .code-output pre {
    margin: 0;
    padding: 1rem;
    background: #1f2937;
    color: #10b981;
    border-radius: 4px;
    font-family: 'Fira Code', 'Monaco', 'Cascadia Code', monospace;
    font-size: 0.85rem;
  }

  /* Responsive Design */
  @media (max-width: 1024px) {
    .right-sidebar {
      display: none;
    }
  }

  @media (max-width: 768px) {
    .nav-container {
      flex-direction: column;
      gap: 1rem;
      padding: 1rem;
    }

    .nav-links {
      gap: 1rem;
    }

    .app-container {
      flex-direction: column;
    }

    .left-sidebar {
      width: 100%;
      position: static;
      height: auto;
      border-right: none;
      border-bottom: 1px solid #e2e8f0;
    }

    .right-sidebar {
      display: none;
    }

    .main-content {
      margin: 0;
      border-radius: 0;
    }
  }
</style>
