---
import LanguagePicker from '../components/LanguagePicker.astro';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

export interface Props {
	title: string;
}

const { title } = Astro.props;
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<!DOCTYPE html>
<html lang={lang}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Learn C++ programming from basics to advanced concepts" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
		<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-tomorrow.min.css">
		<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-core.min.js"></script>
		<script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/autoloader/prism-autoloader.min.js"></script>
	</head>
	<body>
		<div class="layout">
			<!-- Top Navigation Bar -->
			<header class="topbar">
				<div class="topbar-content">
					<div class="topbar-left">
						<button class="sidebar-toggle" id="sidebar-toggle" aria-label="Toggle sidebar">
							<span></span>
							<span></span>
							<span></span>
						</button>
						<div class="topbar-brand">
							<a href={`/${lang}/`} class="brand-link">
								<span class="brand-icon">üöÄ</span>
								<span class="brand-text">{t('site.brand')}</span>
							</a>
						</div>
						<div class="page-info">
							<h1 class="page-title">{title}</h1>
						</div>
					</div>
					<div class="topbar-right">
						<nav class="breadcrumb">
							<a href={`/${lang}/`} class="breadcrumb-home">
								<span class="breadcrumb-icon">üè†</span>
								{t('nav.home')}
							</a>
							<span class="separator">‚Ä∫</span>
							<span class="current">{title}</span>
						</nav>
						<div class="topbar-actions">
							<LanguagePicker />
							<button class="action-btn" id="theme-toggle" aria-label={t('ui.toggle-theme')}>
								<span class="theme-icon">üåô</span>
							</button>
							<button class="action-btn" id="toc-toggle" aria-label={t('ui.toggle-toc')}>
								<span class="toc-icon">üìã</span>
							</button>
						</div>
					</div>
				</div>
			</header>

			<!-- Sidebar Navigation -->
			<nav class="sidebar" id="sidebar">
				<div class="sidebar-header">
					<h2><a href={`/${lang}/`}>{t('site.title')}</a></h2>
				</div>
				
				<div class="nav-section">
					<h3>{t('nav.syntax-basics')}</h3>
					<ul>
						<li><a href={`/${lang}/1-syntax-basics/introduction`}>{t('syntax.intro')}</a></li>
						<li><a href={`/${lang}/1-syntax-basics/variables`}>{t('syntax.variables')}</a></li>
						<li><a href={`/${lang}/1-syntax-basics/control-structures`}>{t('syntax.control')}</a></li>
						<li><a href={`/${lang}/1-syntax-basics/functions`}>{t('syntax.functions')}</a></li>
						<li><a href={`/${lang}/1-syntax-basics/classes`}>{t('syntax.classes')}</a></li>
						<li><a href={`/${lang}/1-syntax-basics/pointers`}>{t('syntax.pointers')}</a></li>
						<li><a href={`/${lang}/1-syntax-basics/memory`}>{t('syntax.memory')}</a></li>
					</ul>
				</div>

				<div class="nav-section">
					<h3>{t('nav.algorithm-basics')}</h3>
					<ul>
						<li><a href={`/${lang}/2-algorithm-basics/sorting`}>{t('algo.sorting')}</a></li>
						<li><a href={`/${lang}/2-algorithm-basics/searching`}>{t('algo.searching')}</a></li>
						<li><a href={`/${lang}/2-algorithm-basics/recursion`}>{t('algo.recursion')}</a></li>
						<li><a href={`/${lang}/2-algorithm-basics/dynamic-programming`}>{t('algo.dp')}</a></li>
						<li><a href={`/${lang}/2-algorithm-basics/greedy-algorithms`}>{t('algo.greedy')}</a></li>
						<li><a href={`/${lang}/2-algorithm-basics/graph-algorithms`}>{t('algo.graph')}</a></li>
						<li><a href={`/${lang}/2-algorithm-basics/string-algorithms`}>{t('algo.string')}</a></li>
					</ul>
				</div>

				<div class="nav-section">
					<h3>{t('nav.data-structures')}</h3>
					<ul>
						<li><a href={`/${lang}/3-data-structures/arrays`}>{t('ds.arrays')}</a></li>
						<li><a href={`/${lang}/3-data-structures/vectors`}>{t('ds.vectors')}</a></li>
						<li><a href={`/${lang}/3-data-structures/linked-lists`}>{t('ds.linked-lists')}</a></li>
						<li><a href={`/${lang}/3-data-structures/stacks`}>{t('ds.stacks')}</a></li>
						<li><a href={`/${lang}/3-data-structures/queues`}>{t('ds.queues')}</a></li>
						<li><a href={`/${lang}/3-data-structures/trees`}>{t('ds.trees')}</a></li>
						<li><a href={`/${lang}/3-data-structures/graphs`}>{t('ds.graphs')}</a></li>
						<li><a href={`/${lang}/3-data-structures/hash-tables`}>{t('ds.hash-tables')}</a></li>
					</ul>
				</div>

				<div class="nav-section">
					<h3>{t('nav.competitive')}</h3>
					<ul>
						<li><a href={`/${lang}/4-competitive/stl-templates`}>{t('comp.stl')}</a></li>
						<li><a href={`/${lang}/4-competitive/data-structures`}>{t('comp.advanced-ds')}</a></li>
						<li><a href={`/${lang}/4-competitive/hash-tables`}>{t('comp.advanced-hash')}</a></li>
						<li><a href={`/${lang}/4-competitive/binary-search`}>{t('comp.binary-search')}</a></li>
						<li><a href={`/${lang}/4-competitive/advanced-search`}>{t('comp.advanced-search')}</a></li>
						<li><a href={`/${lang}/4-competitive/kmp`}>{t('comp.kmp')}</a></li>
						<li><a href={`/${lang}/4-competitive/trie`}>{t('comp.trie')}</a></li>
						<li><a href={`/${lang}/4-competitive/segment-tree`}>{t('comp.segment-tree')}</a></li>
						<li><a href={`/${lang}/4-competitive/monotonic-stack`}>{t('comp.monotonic-stack')}</a></li>
						<li><a href={`/${lang}/4-competitive/monotonic-queue`}>{t('comp.monotonic-queue')}</a></li>
						<li><a href={`/${lang}/4-competitive/tree-dp`}>{t('comp.tree-dp')}</a></li>
						<li><a href={`/${lang}/4-competitive/divide-conquer`}>{t('comp.divide-conquer')}</a></li>
						<li><a href={`/${lang}/4-competitive/greedy-advanced`}>{t('comp.greedy-advanced')}</a></li>
						<li><a href={`/${lang}/4-competitive/number-theory`}>{t('comp.number-theory')}</a></li>
					</ul>
				</div>

				<div class="nav-section">
					<h3>{t('nav.advanced')}</h3>
					<ul>
						<li><a href={`/${lang}/5-advanced/graph-theory`}>{t('adv.graph-theory')}</a></li>
						<li><a href={`/${lang}/5-advanced/graph-algorithms`}>{t('adv.graph-algorithms')}</a></li>
						<li><a href={`/${lang}/5-advanced/union-find`}>{t('adv.union-find')}</a></li>
					</ul>
				</div>

				<div class="nav-section">
					<h3>{t('nav.world-class')}</h3>
					<ul>
						<li><a href={`/${lang}/6-world-class/combinatorics`}>{t('world.combinatorics')}</a></li>
						<li><a href={`/${lang}/6-world-class/linear-algebra`}>{t('world.linear-algebra')}</a></li>
						<li><a href={`/${lang}/6-world-class/advanced-dp`}>{t('world.advanced-dp')}</a></li>
						<li><a href={`/${lang}/6-world-class/balanced-tree`}>{t('world.balanced-trees')}</a></li>
					</ul>
				</div>
			</nav>
			
			<!-- Main Content Area -->
			<main class="content">
				<div class="main-content">
					<slot />
				</div>
			</main>

			<!-- Table of Contents -->
			<aside class="toc-sidebar" id="toc-sidebar">
				<div class="toc-sticky">
					<div class="toc-header">
						<h3>
							<span class="toc-title-icon">üìñ</span>
							{t('ui.table-of-contents')}
						</h3>
						<button class="toc-close" id="toc-close" aria-label="Close table of contents">√ó</button>
					</div>
					<div id="table-of-contents" class="toc-content">
						<!-- TOC will be generated by JavaScript -->
					</div>
					<div class="toc-footer">
						<div class="reading-progress">
							<div class="progress-label">{t('ui.reading-progress')}</div>
							<div class="progress-bar">
								<div class="progress-fill" id="reading-progress"></div>
							</div>
						</div>
					</div>
				</div>
			</aside>
		</div>

		<script>
			// Sidebar Toggle Handler
			document.addEventListener('DOMContentLoaded', function() {
				const sidebarToggle = document.getElementById('sidebar-toggle');
				const sidebar = document.getElementById('sidebar');
				
				if (sidebarToggle && sidebar) {
					sidebarToggle.addEventListener('click', function() {
						sidebar.classList.toggle('sidebar-open');
						document.body.classList.toggle('sidebar-open');
					});
				}
			});

			// TOC Toggle Handler
			document.addEventListener('DOMContentLoaded', function() {
				const tocToggle = document.getElementById('toc-toggle');
				const tocSidebar = document.getElementById('toc-sidebar');
				const tocClose = document.getElementById('toc-close');
				
				if (tocToggle && tocSidebar) {
					tocToggle.addEventListener('click', function() {
						tocSidebar.classList.toggle('toc-open');
					});
				}

				if (tocClose && tocSidebar) {
					tocClose.addEventListener('click', function() {
						tocSidebar.classList.remove('toc-open');
					});
				}
			});

			// Theme Toggle Handler
			document.addEventListener('DOMContentLoaded', function() {
				const themeToggle = document.getElementById('theme-toggle');
				const themeIcon = themeToggle?.querySelector('.theme-icon');
				
				// Check for saved theme preference or default to light
				const currentTheme = localStorage.getItem('theme') || 'light';
				document.documentElement.setAttribute('data-theme', currentTheme);
				
				if (themeIcon) {
					themeIcon.textContent = currentTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
				}
				
				if (themeToggle) {
					themeToggle.addEventListener('click', function() {
						const currentTheme = document.documentElement.getAttribute('data-theme');
						const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
						
						document.documentElement.setAttribute('data-theme', newTheme);
						localStorage.setItem('theme', newTheme);
						
						if (themeIcon) {
							themeIcon.textContent = newTheme === 'dark' ? '‚òÄÔ∏è' : 'üåô';
						}
					});
				}
			});

			// Reading Progress Handler
			document.addEventListener('DOMContentLoaded', function() {
				const progressFill = document.getElementById('reading-progress');
				
				function updateReadingProgress() {
					const scrollTop = window.pageYOffset;
					const docHeight = document.documentElement.scrollHeight - window.innerHeight;
					const scrollPercent = (scrollTop / docHeight) * 100;
					
					if (progressFill) {
						progressFill.style.width = Math.min(scrollPercent, 100) + '%';
					}
				}
				
				window.addEventListener('scroll', updateReadingProgress);
				updateReadingProgress(); // Initial call
			});

			// Sidebar Active Link Handler
			document.addEventListener('DOMContentLoaded', function() {
				// Highlight current page in sidebar
				const currentPath = window.location.pathname;
				const sidebarLinks = document.querySelectorAll('.sidebar a');
				
				sidebarLinks.forEach(link => {
					const href = link.getAttribute('href');
					if (href && currentPath === href) {
						link.classList.add('active');
					}
				});
			});

			// Table of Contents Generator
			document.addEventListener('DOMContentLoaded', function() {
				const tocContainer = document.getElementById('table-of-contents');
				const headings = document.querySelectorAll('.main-content h1, .main-content h2, .main-content h3');
				
				if (!tocContainer || headings.length === 0) return;
				
				// Generate unique IDs for headings if they don't exist
				headings.forEach((heading, index) => {
					const headingElement = heading as HTMLElement;
					if (!headingElement.id) {
						const text = (headingElement.textContent || '').toLowerCase()
							.replace(/[^\w\s-]/g, '') // Remove special characters
							.replace(/\s+/g, '-')     // Replace spaces with hyphens
							.trim();
						headingElement.id = text || `heading-${index}`;
					}
				});
				
				// Build TOC HTML
				let tocHTML = '';
				headings.forEach(heading => {
					const level = parseInt(heading.tagName[1]); // Extract number from H1, H2, H3
					const text = heading.textContent || '';
					const id = heading.id;
					
					tocHTML += `
						<div class="toc-item level-${level}">
							<a href="#${id}" class="toc-link" data-target="${id}">${text}</a>
						</div>
					`;
				});
				
				tocContainer.innerHTML = tocHTML;
				
				// Smooth scrolling for TOC links
				const tocLinks = tocContainer.querySelectorAll('.toc-link');
				tocLinks.forEach(link => {
					link.addEventListener('click', function(e) {
						e.preventDefault();
						const linkElement = e.currentTarget as HTMLAnchorElement;
						if (!linkElement) return;
						
						const targetId = linkElement.getAttribute('data-target');
						const targetElement = targetId ? document.getElementById(targetId) : null;
						
						if (targetElement) {
							const headerOffset = 100; // Account for sticky header
							const elementPosition = targetElement.getBoundingClientRect().top;
							const offsetPosition = elementPosition + window.pageYOffset - headerOffset;
							
							window.scrollTo({
								top: offsetPosition,
								behavior: 'smooth'
							});
						}
					});
				});
				
				// Highlight current section on scroll
				function updateActiveSection() {
					const scrollPos = window.scrollY + 150; // Offset for header
					let activeHeading = null;
					
					headings.forEach(heading => {
						const rect = heading.getBoundingClientRect();
						const headingTop = rect.top + window.pageYOffset;
						
						if (headingTop <= scrollPos) {
							activeHeading = heading;
						}
					});
					
					// Remove all active classes
					tocLinks.forEach(link => link.classList.remove('active'));
					
					// Add active class to current section
					if (activeHeading && tocContainer) {
						const headingElement = activeHeading as HTMLElement;
						if (headingElement.id) {
							const activeLink = tocContainer.querySelector(`[data-target="${headingElement.id}"]`);
							if (activeLink) {
								activeLink.classList.add('active');
							}
						}
					}
				}
				
				// Update active section on scroll
				let ticking = false;
				window.addEventListener('scroll', function() {
					if (!ticking) {
						requestAnimationFrame(function() {
							updateActiveSection();
							ticking = false;
						});
						ticking = true;
					}
				});
				
				// Initial call to set active section
				updateActiveSection();
			});
		</script>
	</body>
</html>

<style is:global>
	:root {
		--primary-color: #4f46e5;
		--primary-dark: #3730a3;
		--secondary-color: #7c3aed;
		--background: #f8fafc;
		--surface: #ffffff;
		--text-primary: #1e293b;
		--text-secondary: #374151;
		--text-muted: #6b7280;
		--border: #e2e8f0;
		--border-light: #f1f5f9;
		--shadow: rgba(0, 0, 0, 0.1);
		--shadow-light: rgba(0, 0, 0, 0.05);
	}

	[data-theme="dark"] {
		--background: #0f172a;
		--surface: #1e293b;
		--text-primary: #f1f5f9;
		--text-secondary: #e2e8f0;
		--text-muted: #94a3b8;
		--border: #334155;
		--border-light: #475569;
		--shadow: rgba(0, 0, 0, 0.3);
		--shadow-light: rgba(0, 0, 0, 0.2);
	}

	html {
		font-family: 'Inter', system-ui, sans-serif;
		background: var(--background);
		color: var(--text-primary);
		transition: background-color 0.3s ease, color 0.3s ease;
	}
	
	body {
		margin: 0;
		padding: 0;
	}
	
	.layout {
		display: block;
		min-height: 100vh;
	}

	/* Top Navigation Bar */
	.topbar {
		position: fixed;
		top: 0;
		left: 0;
		right: 0;
		height: 70px;
		background: var(--surface);
		border-bottom: 1px solid var(--border);
		box-shadow: 0 2px 8px var(--shadow-light);
		z-index: 100;
		backdrop-filter: blur(10px);
	}

	.topbar-content {
		display: flex;
		justify-content: space-between;
		align-items: center;
		height: 100%;
		padding: 0 1.5rem;
		max-width: 100%;
	}

	.topbar-left {
		display: flex;
		align-items: center;
		gap: 1.5rem;
		flex: 1;
		min-width: 0;
	}

	.topbar-brand {
		display: flex;
		align-items: center;
	}

	.brand-link {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		text-decoration: none;
		color: var(--text-primary);
		font-weight: 700;
		font-size: 1.1rem;
		transition: all 0.2s ease;
	}

	.brand-link:hover {
		color: var(--primary-color);
		transform: scale(1.05);
	}

	.brand-icon {
		font-size: 1.5rem;
	}

	.page-info {
		flex: 1;
		min-width: 0;
	}

	.sidebar-toggle {
		display: none;
		flex-direction: column;
		gap: 3px;
		background: none;
		border: none;
		cursor: pointer;
		padding: 10px;
		border-radius: 8px;
		transition: all 0.2s ease;
	}

	.sidebar-toggle:hover {
		background: var(--border-light);
		transform: scale(1.1);
	}

	.sidebar-toggle span {
		width: 22px;
		height: 2px;
		background: var(--text-secondary);
		border-radius: 1px;
		transition: all 0.3s ease;
	}

	.page-title {
		font-size: 1.4rem;
		font-weight: 600;
		color: var(--text-primary);
		margin: 0;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.topbar-right {
		display: flex;
		align-items: center;
		gap: 1.5rem;
	}

	.breadcrumb {
		display: flex;
		align-items: center;
		gap: 0.75rem;
		font-size: 0.9rem;
	}

	.breadcrumb-home {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		color: var(--primary-color);
		text-decoration: none;
		transition: all 0.2s ease;
		padding: 0.5rem 0.75rem;
		border-radius: 6px;
	}

	.breadcrumb-home:hover {
		background: var(--border-light);
		color: var(--primary-dark);
	}

	.breadcrumb-icon {
		font-size: 1rem;
	}

	.breadcrumb .separator {
		color: var(--text-muted);
		font-weight: 500;
	}

	.breadcrumb .current {
		color: var(--text-muted);
		font-weight: 500;
		max-width: 200px;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}

	.topbar-actions {
		display: flex;
		gap: 0.5rem;
	}

	.action-btn {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 40px;
		height: 40px;
		background: none;
		border: 1px solid var(--border);
		border-radius: 8px;
		cursor: pointer;
		transition: all 0.2s ease;
		font-size: 1.2rem;
	}

	.action-btn:hover {
		background: var(--border-light);
		border-color: var(--primary-color);
		transform: translateY(-1px);
	}
	
	/* Sidebar */
	.sidebar {
		position: fixed;
		left: 0;
		top: 70px;
		width: 280px;
		height: calc(100vh - 70px);
		background: var(--surface);
		border-right: 1px solid var(--border);
		padding: 1.5rem 0;
		overflow-y: auto;
		box-shadow: 2px 0 8px var(--shadow-light);
		z-index: 50;
	}
	
	.sidebar-header {
		padding: 0 1.5rem 1.5rem 1.5rem;
		border-bottom: 2px solid var(--border);
		margin-bottom: 1.5rem;
	}
	
	.sidebar-header h2 {
		margin: 0;
		font-size: 1.25rem;
		font-weight: 700;
	}
	
	.sidebar-header h2 a {
		color: var(--text-primary);
		text-decoration: none;
		background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}
	
	.nav-section {
		background: var(--surface);
		margin: 0 1rem 1.5rem 1rem;
		border-radius: 12px;
		box-shadow: 0 2px 8px var(--shadow-light);
		overflow: hidden;
		border: 1px solid var(--border);
	}
	
	.nav-section h3 {
		margin: 0;
		padding: 1rem 1.25rem;
		font-size: 0.9rem;
		font-weight: 600;
		color: var(--text-secondary);
		background: var(--border-light);
		border-bottom: 1px solid var(--border);
		position: relative;
	}
	
	.nav-section h3::after {
		content: '';
		position: absolute;
		bottom: 0;
		left: 1.25rem;
		right: 1.25rem;
		height: 2px;
		background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
		border-radius: 1px;
	}
	
	.nav-section ul {
		list-style: none;
		margin: 0;
		padding: 0.5rem 0;
	}
	
	.nav-section li {
		margin: 0;
	}
	
	.nav-section a {
		display: block;
		padding: 0.75rem 1.25rem;
		color: var(--text-secondary);
		text-decoration: none;
		font-size: 0.875rem;
		transition: all 0.2s ease;
		border-left: 3px solid transparent;
	}
	
	.nav-section a:hover,
	.nav-section a.active {
		background: linear-gradient(90deg, var(--border-light) 0%, var(--border) 100%);
		color: var(--primary-color);
		border-left-color: var(--primary-color);
		transform: translateX(4px);
	}

	.coming-soon {
		display: block;
		padding: 0.75rem 1.25rem;
		color: var(--text-muted);
		font-size: 0.875rem;
		font-style: italic;
	}
	
	/* Main Content */
	.content {
		margin-left: 280px;
		margin-right: 250px;
		margin-top: 70px;
		padding: 2rem;
		background: var(--background);
		overflow-y: auto;
		min-height: calc(100vh - 70px);
	}

	.main-content {
		max-width: none;
		background: var(--surface);
		padding: 2.5rem;
		border-radius: 16px;
		box-shadow: 0 4px 12px var(--shadow-light);
		border: 1px solid var(--border);
	}
	
	.main-content h1 {
		color: var(--text-primary);
		margin-bottom: 1.5rem;
		font-size: 2.5rem;
		font-weight: 700;
		border-bottom: 3px solid var(--primary-color);
		padding-bottom: 0.75rem;
	}
	
	.main-content h2 {
		color: var(--text-secondary);
		margin-top: 2.5rem;
		margin-bottom: 1rem;
		font-size: 1.75rem;
		font-weight: 600;
		border-left: 4px solid var(--primary-color);
		padding-left: 1rem;
	}

	.main-content h3 {
		color: var(--text-secondary);
		margin-top: 2rem;
		margin-bottom: 0.75rem;
		font-size: 1.4rem;
		font-weight: 600;
	}

	.main-content p {
		line-height: 1.8;
		color: var(--text-secondary);
		margin-bottom: 1.25rem;
		font-size: 1rem;
	}

	.main-content ul, .main-content ol {
		margin-bottom: 1.25rem;
		padding-left: 1.5rem;
	}

	.main-content li {
		margin-bottom: 0.5rem;
		line-height: 1.7;
		color: var(--text-secondary);
	}

	.main-content pre {
		background: #1e293b;
		color: #e2e8f0;
		padding: 1.5rem;
		border-radius: 12px;
		overflow-x: auto;
		margin: 2rem 0;
		border: 1px solid #334155;
		box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
	}

	.main-content code {
		background: var(--border-light);
		color: var(--text-primary);
		padding: 0.25rem 0.5rem;
		border-radius: 4px;
		font-size: 0.875rem;
		border: 1px solid var(--border);
	}

	.main-content pre code {
		background: none;
		color: inherit;
		padding: 0;
		border: none;
	}

	/* Table of Contents */
	.toc-sidebar {
		position: fixed;
		right: 0;
		top: 70px;
		width: 250px;
		height: calc(100vh - 70px);
		background: var(--surface);
		border-left: 1px solid var(--border);
		overflow: visible;
		box-shadow: -2px 0 8px var(--shadow-light);
		z-index: 40;
	}

	.toc-sticky {
		position: sticky;
		top: 90px;
		height: calc(100vh - 110px);
		padding: 1.5rem;
		overflow-y: auto;
		display: flex;
		flex-direction: column;
	}

	.toc-header {
		display: flex;
		justify-content: space-between;
		align-items: center;
		margin-bottom: 1rem;
		padding-bottom: 0.75rem;
		border-bottom: 2px solid var(--border);
	}

	.toc-header h3 {
		margin: 0;
		font-size: 1rem;
		font-weight: 600;
		color: var(--text-secondary);
		display: flex;
		align-items: center;
		gap: 0.5rem;
	}

	.toc-title-icon {
		font-size: 1.1rem;
	}

	.toc-close {
		display: none;
		background: none;
		border: none;
		font-size: 1.5rem;
		cursor: pointer;
		color: var(--text-muted);
		padding: 0.25rem;
		border-radius: 4px;
		transition: all 0.2s ease;
	}

	.toc-close:hover {
		background: var(--border-light);
		color: var(--text-secondary);
	}

	.toc-content {
		font-size: 0.875rem;
		flex: 1;
		overflow-y: auto;
	}

	.toc-item {
		margin-bottom: 0.5rem;
	}

	.toc-item.level-1 {
		margin-left: 0;
	}

	.toc-item.level-2 {
		margin-left: 1rem;
	}

	.toc-item.level-3 {
		margin-left: 2rem;
	}

	.toc-link {
		display: block;
		color: var(--text-muted);
		text-decoration: none;
		padding: 0.5rem 0.75rem;
		border-radius: 8px;
		transition: all 0.2s ease;
		border-left: 3px solid transparent;
		font-size: 0.85rem;
		line-height: 1.4;
	}

	.toc-link:hover {
		background: var(--border-light);
		color: var(--primary-color);
		border-left-color: var(--primary-color);
		transform: translateX(2px);
	}

	.toc-link.active {
		background: linear-gradient(90deg, var(--border-light), transparent);
		color: var(--primary-color);
		border-left-color: var(--primary-color);
		font-weight: 600;
	}

	.toc-footer {
		margin-top: 1rem;
		padding-top: 1rem;
		border-top: 1px solid var(--border);
	}

	.reading-progress {
		text-align: center;
	}

	.progress-label {
		font-size: 0.75rem;
		color: var(--text-muted);
		margin-bottom: 0.5rem;
		font-weight: 500;
	}

	.progress-bar {
		width: 100%;
		height: 4px;
		background: var(--border);
		border-radius: 2px;
		overflow: hidden;
	}

	.progress-fill {
		height: 100%;
		background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
		border-radius: 2px;
		transition: width 0.3s ease;
		width: 0%;
	}
	
	/* Mobile Responsive */
	@media (max-width: 1200px) {
		.layout {
			grid-template-areas: 
				"topbar topbar"
				"content content";
			grid-template-columns: 1fr;
			grid-template-rows: 70px 1fr;
		}

		.sidebar {
			left: -280px;
			transition: left 0.3s ease;
		}

		.sidebar.sidebar-open {
			left: 0;
		}

		.sidebar-toggle {
			display: flex;
		}

		.toc-sidebar {
			right: -250px;
			transition: right 0.3s ease;
		}

		.toc-sidebar.toc-open {
			right: 0;
		}

		.toc-close {
			display: block;
		}

		.toc-sticky {
			position: static;
			height: 100%;
			top: 0;
		}

		.content {
			margin-left: 0;
			margin-right: 0;
			padding: 1.5rem;
		}

		.main-content {
			padding: 2rem;
		}

		.main-content h1 {
			font-size: 2rem;
		}

		.page-title {
			font-size: 1.2rem;
		}
	}

	@media (max-width: 768px) {
		.topbar-content {
			padding: 0 1rem;
		}

		.topbar-left {
			gap: 1rem;
		}

		.page-title {
			font-size: 1.1rem;
		}

		.breadcrumb {
			display: none;
		}

		.topbar-actions {
			gap: 0.25rem;
		}

		.action-btn {
			width: 36px;
			height: 36px;
			font-size: 1.1rem;
		}

		.main-content {
			padding: 1.5rem;
		}

		.main-content h1 {
			font-size: 1.75rem;
		}

		.main-content h2 {
			font-size: 1.5rem;
		}

		.content {
			padding: 1rem;
		}
	}
</style>
