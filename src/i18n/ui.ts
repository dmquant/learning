export const languages = {
  en: 'English',
  zh: '中文',
};

export const defaultLang = 'en';

export const ui = {
  en: {
    // Navigation
    'nav.home': 'Home',
    'nav.syntax-basics': 'Syntax Basics',
    'nav.algorithm-basics': 'Algorithm Basics',
    'nav.data-structures': 'Data Structures',
    'nav.competitive': 'Competitive Programming',
    'nav.advanced': 'Advanced Algorithms',
    'nav.world-class': 'World-Class Level',
    
    // Main page
    'site.title': 'C++ Learning Hub',
    'site.description': 'Master C++ programming from basics to advanced competitive programming',
    'site.brand': 'C++ Hub',
    
    // Level cards
    'level.beginner': 'Beginner',
    'level.intermediate': 'Intermediate',
    'level.advanced': 'Advanced',
    'level.expert': 'Expert',
    'level.lessons': 'Lessons',
    
    // Syntax Basics
    'syntax.title': 'Syntax Basics',
    'syntax.description': 'Learn C++ programming from scratch, master basic syntax and core concepts',
    'syntax.intro': 'Introduction to C++',
    'syntax.variables': 'Variables & Operations',
    'syntax.control': 'Control Structures',
    'syntax.functions': 'Functions',
    'syntax.classes': 'Classes & Objects',
    'syntax.pointers': 'Pointers',
    'syntax.memory': 'Memory Management',
    
    // Algorithm Basics
    'algo.title': 'Algorithm Basics',
    'algo.description': 'Master core algorithmic thinking and build a solid foundation for advanced programming',
    'algo.sorting': 'Sorting Algorithms',
    'algo.searching': 'Search & Backtracking',
    'algo.recursion': 'Recursion & Recurrence',
    'algo.dp': 'Dynamic Programming',
    'algo.greedy': 'Greedy Approach',
    'algo.graph': 'Graph Algorithms',
    'algo.string': 'String Algorithms',
    
    // Data Structures
    'ds.title': 'Data Structures',
    'ds.description': 'Deep understanding of classic data structures and efficient data organization methods',
    'ds.arrays': 'Arrays',
    'ds.vectors': 'Vectors',
    'ds.linked-lists': 'Linked Lists',
    'ds.stacks': 'Stacks',
    'ds.queues': 'Queues',
    'ds.trees': 'Trees',
    'ds.graphs': 'Graphs',
    'ds.hash-tables': 'Hash Tables',
    
    // Competitive Programming
    'comp.title': 'Competitive Programming',
    'comp.description': 'Master advanced algorithms and data structures to enhance competitive programming skills',
    'comp.stl': 'STL & Templates',
    'comp.advanced-ds': 'Advanced Data Structures',
    'comp.advanced-hash': 'Advanced Hashing',
    'comp.binary-search': 'Binary Search',
    'comp.advanced-search': 'Advanced Search',
    'comp.kmp': 'KMP String Matching',
    'comp.trie': 'Trie Trees',
    'comp.segment-tree': 'Segment Trees',
    'comp.monotonic-stack': 'Monotonic Stack',
    'comp.monotonic-queue': 'Monotonic Queue',
    'comp.tree-dp': 'Tree DP',
    'comp.divide-conquer': 'Divide & Conquer',
    'comp.greedy-advanced': 'Advanced Greedy',
    'comp.number-theory': 'Number Theory',
    
    // Advanced Algorithms
    'adv.title': 'Advanced Algorithms',
    'adv.description': 'Explore cutting-edge algorithms and advanced computational techniques',
    'adv.graph-theory': 'Advanced Graph Theory',
    'adv.graph-algorithms': 'Advanced Graph Algorithms',
    'adv.union-find': 'Union-Find (Disjoint Set)',
    
    // World-Class Level
    'world.title': 'World-Class Level',
    'world.description': 'Master the most advanced C++ techniques and cutting-edge algorithms',
    'world.combinatorics': 'Combinatorics',
    'world.linear-algebra': 'Linear Algebra',
    'world.advanced-dp': 'Advanced Dynamic Programming',
    'world.balanced-trees': 'Balanced Trees',
    'world.dp-optimization': 'DP Optimization',
    'world.tree-advanced': 'Advanced Tree Algorithms',
    'world.tree-problems': 'Tree Problems',
    'world.heavy-light': 'Heavy-Light Decomposition',
    'world.segment-tree-advanced': 'Advanced Segment Tree',
    'world.balanced-tree': 'Balanced Tree',
    'world.shortest-dag': 'Shortest Path in DAG',
    
    // UI Elements
    'ui.toggle-sidebar': 'Toggle sidebar',
    'ui.toggle-theme': 'Toggle theme',
    'ui.toggle-toc': 'Toggle table of contents',
    'ui.table-of-contents': 'Table of Contents',
    'ui.reading-progress': 'Reading Progress',
    'ui.featured-examples': 'Featured Examples',
    
    // Topics
    'topic.variables': 'Variables',
    'topic.functions': 'Functions',
    'topic.classes': 'Classes',
    'topic.pointers': 'Pointers',
    'topic.sorting': 'Sorting',
    'topic.searching': 'Searching',
    'topic.recursion': 'Recursion',
    'topic.dynamic-programming': 'Dynamic Programming',
    'topic.arrays': 'Arrays',
    'topic.linked-lists': 'Linked Lists',
    'topic.trees': 'Trees',
    'topic.hash-tables': 'Hash Tables',
    'topic.stl': 'STL',
    'topic.segment-trees': 'Segment Trees',
    'topic.graph-theory': 'Graph Theory',
    'topic.number-theory': 'Number Theory',
    'topic.advanced-graph-theory': 'Advanced Graph Theory',
    'topic.union-find': 'Union-Find',
    'topic.sweep-line': 'Sweep Line',
    'topic.dp-optimization': 'DP Optimization',
    'topic.combinatorics': 'Combinatorics',
    'topic.linear-algebra': 'Linear Algebra',
    'topic.advanced-dp': 'Advanced DP',
    'topic.balanced-trees': 'Balanced Trees',
  },
  zh: {
    // Navigation
    'nav.home': '首页',
    'nav.syntax-basics': '语法基础',
    'nav.algorithm-basics': '算法基础',
    'nav.data-structures': '数据结构',
    'nav.competitive': '竞赛编程',
    'nav.advanced': '高级算法',
    'nav.world-class': '世界级水平',
    
    // Main page
    'site.title': 'C++ 学习中心',
    'site.description': '从基础到高级竞赛编程，掌握 C++ 编程',
    'site.brand': 'C++ 中心',
    
    // Level cards
    'level.beginner': '初学者',
    'level.intermediate': '中级',
    'level.advanced': '高级',
    'level.expert': '专家',
    'level.lessons': '课程',
    
    // Syntax Basics
    'syntax.title': '语法基础',
    'syntax.description': '从零开始学习 C++ 编程，掌握基本语法和核心概念',
    'syntax.intro': 'C++ 简介',
    'syntax.variables': '变量与运算',
    'syntax.control': '控制结构',
    'syntax.functions': '函数',
    'syntax.classes': '类与对象',
    'syntax.pointers': '指针',
    'syntax.memory': '内存管理',
    
    // Algorithm Basics
    'algo.title': '算法基础',
    'algo.description': '掌握核心算法思维，为高级编程打下坚实基础',
    'algo.sorting': '排序算法',
    'algo.searching': '搜索与回溯',
    'algo.recursion': '递归与递推',
    'algo.dp': '动态规划',
    'algo.greedy': '贪心算法',
    'algo.graph': '图算法',
    'algo.string': '字符串算法',
    
    // Data Structures
    'ds.title': '数据结构',
    'ds.description': '深入理解经典数据结构和高效数据组织方法',
    'ds.arrays': '数组',
    'ds.vectors': '向量',
    'ds.linked-lists': '链表',
    'ds.stacks': '栈',
    'ds.queues': '队列',
    'ds.trees': '树',
    'ds.graphs': '图',
    'ds.hash-tables': '哈希表',
    
    // Competitive Programming
    'comp.title': '竞赛编程',
    'comp.description': '掌握高级算法和数据结构，提升竞赛编程技能',
    'comp.stl': 'STL 与模板',
    'comp.advanced-ds': '高级数据结构',
    'comp.advanced-hash': '高级哈希',
    'comp.binary-search': '二分查找',
    'comp.advanced-search': '高级搜索',
    'comp.kmp': 'KMP 字符串匹配',
    'comp.trie': '字典树',
    'comp.segment-tree': '线段树',
    'comp.monotonic-stack': '单调栈',
    'comp.monotonic-queue': '单调队列',
    'comp.tree-dp': '树形 DP',
    'comp.divide-conquer': '分治算法',
    'comp.greedy-advanced': '高级贪心',
    'comp.number-theory': '数论',
    
    // Advanced Algorithms
    'adv.title': '高级算法',
    'adv.description': '探索前沿算法和高级计算技术',
    'adv.graph-theory': '高级图论',
    'adv.graph-algorithms': '高级图算法',
    'adv.union-find': '并查集',
    
    // World-Class Level
    'world.title': '世界级水平',
    'world.description': '掌握最先进的 C++ 技术和前沿算法',
    'world.combinatorics': '组合数学',
    'world.linear-algebra': '线性代数',
    'world.advanced-dp': '高级动态规划',
    'world.balanced-trees': '平衡树',
    'world.dp-optimization': 'DP优化',
    'world.tree-advanced': '高级树算法',
    'world.tree-problems': '树问题',
    'world.heavy-light': '重链剖分',
    'world.segment-tree-advanced': '高级线段树',
    'world.balanced-tree': '平衡树',
    'world.shortest-dag': 'DAG最短路径',
    
    // UI Elements
    'ui.toggle-sidebar': '切换侧边栏',
    'ui.toggle-theme': '切换主题',
    'ui.toggle-toc': '切换目录',
    'ui.table-of-contents': '目录',
    'ui.reading-progress': '阅读进度',
    'ui.featured-examples': '精选示例',
    
    // Topics
    'topic.variables': '变量',
    'topic.functions': '函数',
    'topic.classes': '类',
    'topic.pointers': '指针',
    'topic.sorting': '排序',
    'topic.searching': '搜索',
    'topic.recursion': '递归',
    'topic.dynamic-programming': '动态规划',
    'topic.arrays': '数组',
    'topic.linked-lists': '链表',
    'topic.trees': '树',
    'topic.hash-tables': '哈希表',
    'topic.stl': 'STL',
    'topic.segment-trees': '线段树',
    'topic.graph-theory': '图论',
    'topic.number-theory': '数论',
    'topic.advanced-graph-theory': '高级图论',
    'topic.union-find': '并查集',
    'topic.sweep-line': '扫描线',
    'topic.dp-optimization': 'DP 优化',
    'topic.combinatorics': '组合数学',
    'topic.linear-algebra': '线性代数',
    'topic.advanced-dp': '高级 DP',
    'topic.balanced-trees': '平衡树',
  },
} as const; 